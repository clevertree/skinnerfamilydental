<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/app/globals.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/app/globals.css" />
              <option name="originalContent" value=":root {&#10;  --background: #ffffff;&#10;  --foreground: #171717;&#10;}&#10;&#10;@media (prefers-color-scheme: dark) {&#10;  :root {&#10;    --background: #0a0a0a;&#10;    --foreground: #ededed;&#10;  }&#10;}&#10;&#10;html,&#10;body {&#10;  max-width: 100vw;&#10;  overflow-x: hidden;&#10;}&#10;&#10;body {&#10;  color: var(--foreground);&#10;  background: var(--background);&#10;  font-family: Arial, Helvetica, sans-serif;&#10;  -webkit-font-smoothing: antialiased;&#10;  -moz-osx-font-smoothing: grayscale;&#10;}&#10;&#10;* {&#10;  box-sizing: border-box;&#10;  padding: 0;&#10;  margin: 0;&#10;}&#10;&#10;a {&#10;  color: inherit;&#10;  text-decoration: none;&#10;}&#10;&#10;@media (prefers-color-scheme: dark) {&#10;  html {&#10;    color-scheme: dark;&#10;  }&#10;}&#10;&#10;/*.animate-zoom-in {*/&#10;/*    animation: zoom-in 3s ease-in-out;*/&#10;/*}*/&#10;&#10;/*@keyframes zoom-in {*/&#10;/*  from {*/&#10;/*    transform: scale(0);*/&#10;/*    opacity: 0;*/&#10;/*  }*/&#10;/*  to {*/&#10;/*    transform: scale(1);*/&#10;/*    opacity: 1;*/&#10;/*  }*/&#10;/*}*/&#10;" />
              <option name="updatedContent" value="@tailwind base;&#10;@tailwind components;&#10;@tailwind utilities;&#10;&#10;:root {&#10;  --background: #ffffff;&#10;  --foreground: #171717;&#10;}&#10;&#10;@media (prefers-color-scheme: dark) {&#10;  :root {&#10;    --background: #0a0a0a;&#10;    --foreground: #ededed;&#10;  }&#10;}&#10;&#10;html,&#10;body {&#10;  max-width: 100vw;&#10;  overflow-x: hidden;&#10;}&#10;&#10;body {&#10;  color: var(--foreground);&#10;  background: var(--background);&#10;  font-family: Arial, Helvetica, sans-serif;&#10;  -webkit-font-smoothing: antialiased;&#10;  -moz-osx-font-smoothing: grayscale;&#10;}&#10;&#10;* {&#10;  box-sizing: border-box;&#10;  padding: 0;&#10;  margin: 0;&#10;}&#10;&#10;a {&#10;  color: inherit;&#10;  text-decoration: none;&#10;}&#10;&#10;@media (prefers-color-scheme: dark) {&#10;  html {&#10;    color-scheme: dark;&#10;  }&#10;}&#10;&#10;/*.animate-zoom-in {*/&#10;/*    animation: zoom-in 3s ease-in-out;*/&#10;/*}*/&#10;&#10;/*@keyframes zoom-in {*/&#10;/*  from {*/&#10;/*    transform: scale(0);*/&#10;/*    opacity: 0;*/&#10;/*  }*/&#10;/*  to {*/&#10;/*    transform: scale(1);*/&#10;/*    opacity: 1;*/&#10;/*  }*/&#10;/*}*/" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/component/Animation/ZoomInWrapper.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/component/Animation/ZoomInWrapper.tsx" />
              <option name="updatedContent" value="import React, { useRef, useEffect, useState, ReactNode } from 'react';&#10;&#10;interface ZoomInWrapperProps {&#10;  children: ReactNode;&#10;  className?: string;&#10;}&#10;&#10;const ZoomInWrapper: React.FC&lt;ZoomInWrapperProps&gt; = ({ children, className }) =&gt; {&#10;  const ref = useRef&lt;HTMLDivElement&gt;(null);&#10;  const [isVisible, setIsVisible] = useState(false);&#10;&#10;  useEffect(() =&gt; {&#10;    const node = ref.current;&#10;    if (!node) return;&#10;    const observer = new window.IntersectionObserver(&#10;      ([entry]) =&gt; {&#10;        if (entry.isIntersecting) {&#10;          setIsVisible(true);&#10;          observer.disconnect();&#10;        }&#10;      },&#10;      { threshold: 0.1 }&#10;    );&#10;    observer.observe(node);&#10;    return () =&gt; observer.disconnect();&#10;  }, []);&#10;&#10;  return (&#10;    &lt;div&#10;      ref={ref}&#10;      className={&#10;        `${className ? className + ' ' : ''}` +&#10;        (isVisible ? 'zoom-in-animate' : 'zoom-in-init')&#10;      }&#10;    &gt;&#10;      {children}&#10;    &lt;/div&gt;&#10;  );&#10;};&#10;&#10;export default ZoomInWrapper;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/component/Animation/animation-method-zoom-in.module.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/component/Animation/animation-method-zoom-in.module.css" />
              <option name="updatedContent" value=".animation-method-zoom-in {&#10;  opacity: 0;&#10;  transform: scale(0.95);&#10;  transition: opacity 0.6s cubic-bezier(0.4,0,0.2,1), transform 0.6s cubic-bezier(0.4,0,0.2,1);&#10;}&#10;&#10;.animation-method-zoom-in.animation-active {&#10;  opacity: 1;&#10;  transform: scale(1);&#10;}&#10;&#10;.animation-method-zoom-in.animation-inactive {&#10;  opacity: 0;&#10;  transform: scale(0.95);&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/tailwind.config.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/tailwind.config.js" />
              <option name="updatedContent" value="// ...existing code...&#10;  content: [&#10;    './src/**/*.{js,ts,jsx,tsx}',&#10;    './pages/**/*.{js,ts,jsx,tsx}',&#10;    './components/**/*.{js,ts,jsx,tsx}',&#10;    './app/**/*.{js,ts,jsx,tsx}',&#10;  ],&#10;// ...existing code..." />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>